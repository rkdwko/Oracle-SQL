--Q1
SELECT *
FROM STUDENT NATURAL JOIN ENROL;
--Q3
SELECT SUB_NAME, STU_NO, ENR_GRADE
FROM SUBJECT NATURAL JOIN ENROL;
--Q5
SELECT STUDENT.STU_NAME, ENR_GRADE
FROM STUDENT, ENROL
WHERE STUDENT.STU_NO = ENROL.STU_NO
AND ENR_GRADE >= 70;
--Q7
SELECT STU_NAME, ENR_GRADE
FROM STUDENT NATURAL JOIN ENROL
WHERE ENR_GRADE >= 70;
--Q9
SELECT SUB_NAME, SUB_PROF
FROM SUBJECT NATURAL JOIN STUDENT NATURAL JOIN ENROL
WHERE STU_NAME = '김인중';
--Q11
SELECT STU_NAME
FROM STUDENT NATURAL JOIN ENROL NATURAL JOIN SUBJECT
WHERE SUB_PROF = '강종영';
--Q13
SELECT STU_NO, STU_NAME, SUB_NAME
FROM STUDENT NATURAL JOIN ENROL NATURAL JOIN SUBJECT
WHERE SUB_NAME IN ('시스템분석설계', '소프트웨어공학')
ORDER BY STU_NO;
--Q15
SELECT STU_NO, STU_NAME, SUB_NAME
FROM STUDENT NATURAL JOIN ENROL NATURAL JOIN SUBJECT
WHERE SUB_NAME IN ('기계공작법', '기초전자실험')
ORDER BY STU_NO;
--Q17
SELECT STU_NAME, ENR_GRADE
FROM STUDENT NATURAL JOIN ENROL;
--Q19
SELECT SUB_NAME
FROM SUBJECT NATURAL JOIN ENROL NATURAL JOIN STUDENT
WHERE STU_GENDER = 'F';
--Q21
SELECT STU_NO, STU_NAME
FROM STUDENT NATURAL JOIN ENROL NATURAL JOIN SUBJECT
WHERE SUB_DEPT = '컴퓨터정보';
--Q23
SELECT STU_NAME
FROM STUDENT NATURAL JOIN ENROL NATURAL JOIN SUBJECT
WHERE STU_GENDER = 'F'
AND SUB_PROF = '구봉규';
--Q25
SELECT STU_NO, STU_NAME, ENR_GRADE
FROM STUDENT NATURAL JOIN ENROL
WHERE ENR_GRADE < (SELECT AVG(ENR_GRADE)
FROM ENROL NATURAL JOIN STUDENT
WHERE STU_NAME = '김인중');
--Q27
SELECT A.STU_NO, A.ENR_GRADE, A.STU_DEPT
FROM (SELECT *
FROM STUDENT NATURAL JOIN ENROL) A,
(SELECT STU_DEPT, AVG(ENR_GRADE) AS AVG_GRADE
FROM ENROL NATURAL JOIN STUDENT
GROUP BY STU_DEPT) B
WHERE A.STU_DEPT = B.STU_DEPT
AND A.ENR_GRADE > B.AVG_GRADE;
--Q29
SELECT STU_NO, STU_NAME, AVG(ENR_GRADE) AS AVG_GRADE
FROM ENROL NATURAL JOIN STUDENT
WHERE STU_DEPT = '컴퓨터정보'
GROUP BY STU_NO, STU_NAME
ORDER BY AVG_GRADE;
--Q31
SELECT STU_NO, STU_NAME, COUNT(SUB_NO) AS COUNTS
FROM STUDENT NATURAL JOIN ENROL NATURAL JOIN SUBJECT
GROUP BY STU_NO, STU_NAME
HAVING COUNT(SUB_NO) >= 2;
--Q33
SELECT * 
FROM (SELECT STU_NO, STU_NAME, GRADE
FROM (SELECT STU_NO, STU_NAME, AVG(ENR_GRADE) AS GRADE
FROM STUDENT NATURAL JOIN ENROL
GROUP BY STU_NO, STU_NAME)
ORDER BY GRADE DESC)
WHERE ROWNUM = 1;